import React, { PureComponent, createRef } from 'react'
import { connect } from 'react-redux'
import Webcam from 'react-webcam'
import { updateUserPicture } from './actions'
import applyFilter from './applyFilter'

const dimensions = { width: 320, height: 240 }

export class PictureCapture extends PureComponent {
  webcamRef = createRef()

  componentDidMount = () => {
    window.webcamRef = this.webcamRef
    const interval = setInterval(async() => {
      console.debug('interval', this.webcamRef)
      if (this.webcamRef.current && await this.capturePhoto()) {
        console.debug('cleared interval', interval)
        clearInterval(interval)
      }
    }, 1000)
  }

  render = () => (
    <div className="picture-capture">
      <Webcam
        audio={false}
        ref={this.webcamRef}
        screenshotFormat="image/jpeg"
        videoConstraints={{ ...dimensions, facingMode: 'user' }}
        {...dimensions}
      />
    </div>
  )

  capturePhoto = async() => {
    console.debug('taking a photo')

    const style = [-0.17714522778987885, 0.11366762220859528, 0.044748906046152115, -0.0759943276643753, -0.004989073611795902, 0.1347780078649521, 0.18339093029499054, -0.17668597400188446, 0.12156328558921814, -0.030158208683133125, 0.006802483927458525, -0.05022324621677399, -0.31632277369499207, -0.21387611329555511, -0.03708123415708542, -0.09270250797271729, -0.28240907192230225, -0.03855043649673462, 0.04233139380812645, 0.047076188027858734, -0.012041762471199036, -0.3014778792858124, 0.37585970759391785, 0.3394811451435089, 0.39197659492492676, 0.027865039184689522, -0.056546252220869064, 0.03336326405405998, -0.20103231072425842, -0.19757014513015747, 0.09978391230106354, 0.2824556827545166, 0.18996158242225647, 0.018328366801142693, -0.13031136989593506, 0.06324388831853867, -0.15949207544326782, -0.2302108108997345, 0.2871687114238739, 0.3202054500579834, 0.1854163408279419, -0.06687822192907333, -0.13701502978801727, -0.20853035151958466, -0.0961616039276123, 0.26139041781425476, -0.076884426176548, 0.2602772116661072, 0.07859756797552109, 0.2601926028728485, 0.15752039849758148, -0.04344790056347847, -0.22197899222373962, -0.01664252020418644, 0.08729764074087143, 0.022304024547338486, 0.084476038813591, 0.11509109288454056, 0.23560868203639984, 0.11264727264642715, 0.22632667422294617, 0.23554006218910217, -0.013983900658786297, -0.3397741913795471, 0.18979546427726746, -0.08659398555755615, 0.09684779495000839, -0.008991459384560585, 0.0303451269865036, 0.06400109082460403, 0.2613624334335327, -0.020990002900362015, 0.09917208552360535, -0.055331435054540634, 0.191560298204422, -0.005184221547096968, 0.03787267208099365, 0.3623526394367218, -0.0046872831881046295, -0.09255408495664597, 0.2435269057750702, -0.2178105264902115, -0.061878811568021774, -0.20379631221294403, 0.05472400039434433, -0.04959723725914955, 0.24424253404140472, 0.27106577157974243, -0.3352271020412445, -0.03808589279651642, 0.23298878967761993, 0.058797381818294525, -0.2453925460577011, 0.12224448472261429, 0.11541058123111725, -0.122095488011837, 0.023623721674084663, 0.14238901436328888, 0.41151371598243713, -0.11586153507232666]

    const image = await applyFilter(this.webcamRef.current.getScreenshot(), style) //this.props.pictureFilter)
    console.debug('capturePhoto', { image })
    if (image) {
      this.props.updateUserPicture(image)
      return true
    }
  }
}

export default connect(
  ({ pictureFilter }) => ({ pictureFilter }),
  { updateUserPicture }
)(PictureCapture)
